setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
source('~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/simple_linear_regression.R', echo=TRUE)
source('~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/simple_linear_regression.R', echo=TRUE)
source('~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression/simple_linear_regression.R', echo=TRUE)
y_pred
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary), colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
backwardElimination <- function(x, sl) {
numVars = length(x)
for (i in c(1:numVars)) {
regressor = lm(formula = Profit ~ ., data = x)
maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
if (maxVar > sl){
j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
x = x[, -j]
}
numVars = numVars - 1
}
return(summary(regressor))
}
sl = 0.05
dataset = dataset[, c(1, 2, 3, 4, 5)]
backwardElimination(training_set, sl)
setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Data.csv')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
View(dataset)
View(dataset)
linear_regressor = lm(formula = Salary ~ ., data = dataset)
dataset$Level2 = dataset$Level^2
View(dataset)
dataset$Level3 = dataset$Level^3
polynomial_regressor = lm(formula = Salary ~ ., data = dataset)
summary(polynomial_regressor)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(linear_regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (Linear Regression)") +
xlab("Level") +
ylab("Salary")
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(polynomial_regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (Linear Regression)") +
xlab("Level") +
ylab("Salary")
dataset$Level4 = dataset$Level^4
polynomial_regressor = lm(formula = Salary ~ ., data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(polynomial_regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (Linear Regression)") +
xlab("Level") +
ylab("Salary")
y_pred = predict(linear_regressor, data.frame(Level = 6.5))
y_pred = predict(linear_regressor, data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
y_pred = predict(polynomial_regressor, data.frame(Level = 6.5, Level2 = 6.5^2, Level3 = 6.5^3, Level4 = 6.5^4))
setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library(e1071)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = svm(formula = Salary ~ ., data = dataset, type ='eps-regression')
y_pred = predict(regressor, data.frame(Level = 6.5))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (SVR)") +
xlab("Level") +
ylab("Salary")
setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression")
install.packages('rpart')
library(rpart)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
regressor = rpart(formula = Salary ~ ., data = dataset)
y_pred = predict(regressor, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (Decision Tree Regression)") +
xlab("Level") +
ylab("Salary")
regressor = rpart(formula = Salary ~ ., data = dataset, control = rpart.control(minsplit = 1))
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)), colour = 'blue') +
ggtitle("Truth or Bluff (Decision Tree Regression)") +
xlab("Level") +
ylab("Salary")
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Regression Model)") +
xlab("Level") +
ylab("Salary")
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Regression Model)") +
xlab("Level") +
ylab("Salary")
y_pred = predict(regressor, data.frame(Level = 6.5))
setwd("~/Documents/Courses/Machine Learning/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression")
install.packages('randomForest')
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 10)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Random Forest Regression)") +
xlab("Level") +
ylab("Salary")
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Random Forest Regression)") +
xlab("Level") +
ylab("Salary")
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 100)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Random Forest Regression)") +
xlab("Level") +
ylab("Salary")
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 500)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Random Forest Regression)") +
xlab("Level") +
ylab("Salary")
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 500)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour = 'blue') +
ggtitle("Truth or Bluff (Random Forest Regression)") +
xlab("Level") +
ylab("Salary")
y_pred = predict(regressor, data.frame(Level = 6.5))
